<?php
if(!defined('IN_DISCUZ')) {
    exit('Access Denied');
}
/**
 * generated by mengma
 * @create: 2018-12-15 10:27
 * @usage: C::t('#ankix#topic')->fun();
 **/
class table_topic_unit_item
{
    private $table = "topic_unit_item";
    private $pdo;


    public function __construct() {
        $this->pdo = ankix_env::getpdo('db_ankix_base');
    }

    // 获取Topic
    public function getByTopicId($tid)
    {/*{{{*/
        $sql = <<<EOF
SELECT 
a.tid as topicId,a.tname as topicName,a.description,
a.cateid as cateId,
b.cname as cateName,
a.status,a.uid,
a.create_time as createTime
FROM {$this->table} as a
LEFT JOIN topic_category as b ON b.cid=a.cateid
WHERE a.tid='$tid' AND a.isdel=0;
EOF;
        return $this->pdo->queryFirst($sql);
    }/*}}}*/


    // 获取单元的全部数据
    public function getAllByUnitId($unitId)
    {/*{{{*/
        $sql = <<<EOF
SELECT 
a.id as itemId,
a.fields as dataFields
FROM {$this->table} as a
WHERE a.unit_id='$unitId' AND isdel=0
EOF;
        $res = $this->pdo->queryAll($sql);
        foreach ($res as &$item) {
            $item['dataFields'] = $this->decodeFields($item['dataFields']);
        }
        return $res;
    }/*}}}*/



    // 查询接口
    public function query()
    {/*{{{*/
        global  $_G;
        $uid = $_G['uid'];
        $return = array(
            "totalProperty" => 0,
            "root" => array(),
        );
        $key   = ankix_validate::getNCParameter('key','key','string');
        $uid   = ankix_validate::getNCParameter('uid','uid','integer');
        $tid   = ankix_validate::getNCParameter('tid','tid','integer');
        $sort  = ankix_validate::getOPParameter('sort','sort','string',1024,'id');
        $dir   = ankix_validate::getOPParameter('dir','dir','string',1024,'ASC');
        $start = ankix_validate::getOPParameter('start','start','integer',1024,0);
        $limit = ankix_validate::getOPParameter('limit','limit','integer',1024,20);
        $where = "a.topic_id='$tid' AND a.isdel=0";
        if ($uid!=0) $where.= " AND a.unit_id='$uid'";
        if ($key!="") $where.=" AND (a.fields like '%$key%')";
        $sql = <<<EOF
SELECT SQL_CALC_FOUND_ROWS 
a.*,b.name as unit_name
FROM {$this->table} as a
LEFT JOIN topic_unit as b ON b.id=a.unit_id
WHERE $where
ORDER BY a.$sort $dir
LIMIT $start,$limit
EOF;
        $return["root"] = $this->pdo->queryAll($sql);
        $row = $this->pdo->queryFirst("SELECT FOUND_ROWS() AS total");
        $return["totalProperty"] = $row["total"];
        ///////////////////////////////////
        // fields字段处理
        foreach ($return['root'] as &$item) {
            $item['fields'] = $this->decodeFields($item['fields']);
        }
        ///////////////////////////////////
        return $return;
    }/*}}}*/


    private function encodeFields(array &$fields) {
        $str = implode("\t",$fields);
        return $str;
    }

    private function decodeFields($fields) {
        return explode("\t",$fields);
    }

    // 保存记录
    public function save()
    {/*{{{*/
        global $_G;
        $uid = $_G['uid'];
        $id = ankix_validate::getNCParameter('id','id','integer');
        $record = array (
            'unit_id' => ankix_validate::getNCParameter('unit_id','unit_id','integer'),
            'topic_id' => ankix_validate::getNCParameter('topic_id','topic_id','integer'),
            'fields' => $this->encodeFields($_POST['fields']),
        );
        if ($record['unit_id']<=0) throw new Exception("unit_id is illegal");
        if ($record['topic_id']<=0) throw new Exception("topic_id is illegal");
        if ($id==0) {
            $record['status'] = 1;
            $record['create_time'] = date('Y-m-d H:i:s');
            return $this->pdo->insert($this->table,$record);
        } else {
            return $this->pdo->update($this->table,$record,array("id='$id'"));
        }
    }/*}}}*/

    // 删除记录
    public function remove()
    {/*{{{*/
        $id = ankix_validate::getNCParameter('id','id','integer');
        $record = array(
            'isdel' => 1,
        );
        return $this->pdo->update($this->table,$record,array("id='$id'"));
    }/*}}}*/

    // 设置保存
    public function setEnable()
    {/*{{{*/
        $id = ankix_validate::getNCParameter('id','id','integer');
        $enable = ankix_validate::getNCParameter('enabled','enabled','integer');
        return $this->update($id,array('enabled'=>$enable));
    }/*}}}*/

    // 批量移动
    public function batMove()
    {/*{{{*/
        $unit_id = ankix_validate::getNCParameter('unit_id','unit_id','integer');
        $ids = $_POST['ids'];
        if (empty($ids) || $unit_id==0) throw new Exception('illegal request');
        $idstr = implode(',',$ids);
        $sql = "UPDATE topic_unit_item SET unit_id='$unit_id' WHERE id IN ($idstr)";
        return $this->pdo->exec($sql);
    }/*}}}*/

    // 批量删除
    public function batRemove()
    {/*{{{*/
        $ids = $_POST['ids'];
        if (empty($ids)) throw new Exception('illegal request');
        $idstr = implode(',',$ids);
        $sql = "UPDATE topic_unit_item SET isdel=1 WHERE id IN ($idstr)";
        return $this->pdo->exec($sql);
    }/*}}}*/

}
// vim600: sw=4 ts=4 fdm=marker syn=php
?>
